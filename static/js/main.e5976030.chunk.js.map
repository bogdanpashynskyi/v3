{"version":3,"sources":["team.jpg","logo.png","components/Nav.js","components/Home.js","components/Services.js","components/About.js","components/Blog.js","components/ContactUs.js","Logo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","className","react_router_dom","to","Home","src","team","alt","Services","About","Blog","ContactUs","for","type","placeholder","name","Logo","logo","App","src_Logo","components_Nav","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5976030.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.adf5522e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ed80c0a7.png\";","import React from 'react';\nimport { Link} from 'react-router-dom';\n\nconst Nav = () => {\n  return (\n    <div className=\"nav-container\">\n      <ul className=\"nav-list\">\n        <li className=\"nav-links\">\n          <Link className=\"nav-react-links\" to=\"/\">Home</Link>\n        </li>\n        <li className=\"nav-links\">\n          <Link className=\"nav-react-links\"to=\"/services/\">Services</Link>\n        </li>\n        <li className=\"nav-links\">\n          <Link className=\"nav-react-links\" to=\"/about/\">About</Link>\n        </li>\n        <li className=\"nav-links\">\n          <Link className=\"nav-react-links\" to=\"/blog/\">Blog</Link>\n        </li>\n        <li className=\"nav-links\">\n          <Link className=\"nav-react-links\" to=\"/contact/\">Contact Us</Link>\n        </li>\n      </ul> \n    </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport team from '../team.jpg'\n\nconst Home = () => {\n  return (\n    <div className=\"home-page\">\n      <div className=\"home-text\">\n        <h1 className=\"title-new\">V3 Team</h1>\n        <div className=\"content-text\"> <span className=\"vertical-post\">|</span> First of all, We are a Team, that is composed of full-time 3 lawyers, a finance and accounting experts, as well as a network of advisors from different countries. Diversity is our main advantage. </div>\n        <div className=\"content-text\">  <span className=\"vertical-post\">|</span> Indeed, we are young and motivated, but we despise all the clich√©s. We work with full dedication to the Project 24/7 and we perform an in-depth analysis in order to give the best possible result. </div>\n        <div className=\"content-text\"> <span className=\"vertical-post\">|</span> That being said, we prefer to prove our value with our work, rather with words. </div>\n      </div>\n        <img className=\"team-pic\" src={team} alt=\"v3team\"/>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\n\nconst Services = () => {\n  return (\n    <h1 className=\"title-new\">Services</h1>\n  )\n}\n\nexport default Services;","import React from 'react';\n\nconst About = () => {\n  return (\n    <h1 className=\"title-new\" >About</h1>\n  )\n}\n\nexport default About;","import React from 'react';\n\nconst Blog = () => {\n  return (\n    <h1 className=\"title-new\">Blog</h1>\n  )\n}\n\nexport default Blog","import React from 'react';\n\nconst ContactUs = () => {\n  return (\n    <div>\n      <h1 className=\"title-new\">Contact Us</h1>\n      <form>\n        <div className=\"contact-form\">\n          <div className=\"contact-field\">\n            <label for=\"name\"> Name </label>\n            <input type=\"text\" for=\"name\" placeholder=\"Name...\"></input>\n          </div>\n          \n          <div className=\"contact-field\">\n            <label for=\"email\"> Email </label>\n            <input type=\"text\" name=\"email\" placeholder=\"Email...\"></input>\n          </div>\n          \n          <div className=\"contact-field\">\n            <label for=\"text-area\"> Comment </label>\n            <textarea type=\"text-area\" name=\"text-area\" placeholder=\"Please insert your comment...\"></textarea>\n          </div>\n          \n          <div>\n            <button className=\"submit-button\"> Submit </button>\n          </div>\n        </div>\n      </form>\n    </div>\n    \n  )\n}\n\nexport default ContactUs;","import React from 'react';\n\nimport logo from './logo.png';\n\nimport './App.css';\n\nconst Logo = () => {\n  return (\n    <div>\n      <img \n        src={logo}\n        className=\"logo\"\n        alt=\"V3\"\n      />\n    </div>\n\n  )\n}\n\nexport default Logo;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nimport './App.css';\n\nimport Nav from './components/Nav';\nimport Home from './components/Home'\nimport Services from './components/Services'\nimport About from './components/About'\nimport Blog from './components/Blog'\nimport ContactUs from './components/ContactUs'\nimport Logo from './Logo'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <div className=\"NavBar\">\n          <Logo></Logo>\n          <Nav></Nav>\n        </div>\n\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/services/\" component={Services} />\n          <Route path=\"/about/\" component={About} />\n          <Route path=\"/blog/\" component={Blog} />\n          <Route path=\"/contact/\" component={ContactUs} />\n        \n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}